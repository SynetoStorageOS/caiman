#!/bin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright (c) 2009, 2011, Oracle and/or its affiliates. All rights reserved.

. /lib/svc/share/smf_include.sh
. /usr/lib/installadm/installadm-common

# Make sure working directory is / to prevent unmounting problems.
cd /

# Apache configuration files
AI_HTTPD_CONF=/var/installadm/ai-webserver/ai-httpd.conf
LISTEN_ADDRESSES=/var/installadm/ai-webserver/listen-addresses.conf
COMPATIBILITY_PORTS=/var/installadm/ai-webserver/compatibility-configuration/ports.conf

# required commands
AIMDNSD=/usr/lib/installadm/aimdnsd.py
AIMDNSD_PID=/var/run/aimdnsd
APACHE2=/usr/apache2/2.2/bin/apachectl
AWK=/usr/bin/awk
CAT=/usr/bin/cat
CUT=/usr/bin/cut
ECHO=/usr/bin/echo
GREP=/bin/grep
KILL=/usr/bin/kill
HTTPD=/usr/apache2/2.2/bin/httpd
PS=/usr/bin/ps
PGREP=/usr/bin/pgrep
RM=/usr/bin/rm
SVCCFG=/usr/sbin/svccfg
SVCPROP=/usr/bin/svcprop

# Automated Install SMF variables
PORT='all_services/port'

# Global SMF property values
SMF_PORT=$($SVCPROP -p $PORT $SMF_FMRI 2>/dev/null)

#
# setup_compatibility_file
#	Sets up the compatibility file with the additional ports needed for
#	older services.  The ${AI_HTTPD_CONF} file contains a line that includes
#	the ${COMPATIBILITY_PORTS} file which this function creates.
#
#	Args
#		None
#	Globals
#		COMPATIBILITY_PORTS - removes and creates the file pointed to
#				      by this global
#	Retruns
#		None
#
function setup_compatibility_file {
	# ensure that the apache webserver services old clients
	if [ -f ${COMPATIBILITY_PORTS} ] ; then
		${RM} ${COMPATIBILITY_PORTS}
	fi
	${CAT} <<- COMPAT_EOF > ${COMPATIBILITY_PORTS}
	#
	# Do not edit by hand.
	# This file is created by the svc:/system/install/server method script
	# and is Included in the AI webserver configuration file.
	#
	COMPAT_EOF

	# get the full ip address from valid_networks
	ips=$(valid_networks true)

	# add the necessary ports from the old services
	SMF_PGS=$(${SVCCFG} -s ${SMF_FMRI} listpg | ${AWK} '{print $1}' | \
		  ${GREP} "^AI")
	for pg in ${SMF_PGS} ; do
		status=$(${SVCPROP} -p ${pg}/status ${SMF_FMRI})
		if [ "X${status}" != "X" -a "${status}" == "on" ] ; then
			port=$(${SVCPROP} -cp ${pg}/txt_record ${SMF_FMRI} 2>/dev/null | \
				   ${CUT} -f 2 -s -d':')
			if [ "X${port}" != "X" -a  "${port}" != "${SMF_PORT}" ]; then
				for ip in ${ips} ; do
					${GREP} "Listen ${ip}:${port}\$" ${COMPATIBILITY_PORTS} \
						${AI_HTTPD_CONF} >/dev/null 2>&1
					if [ $? -eq 1 ]; then
						# port not in the configuration, add it
						${ECHO} "Listen" ${ip}:${port} >> ${COMPATIBILITY_PORTS}
					fi
				done
			elif [ "X${port}" == "X" ]; then
				service=$(${ECHO} ${pg} | ${CUT} -c3-)
				${ECHO} "The port is not set in the txt_record for ${service}"
				exit $SMF_EXIT_ERR_CONFIG
			fi
		fi
	done
}

#
# setup_main_ports
#	Sets up the listen_address file with the ip addresses and SMF port
#	needed for the services.  The ${AI_HTTPD_CONF} file contains a line
#	that includes the ${LISTEN_ADDRESSES} file which this function creates.
#
#	Args
#		None
#	Globals
#		LISTEN_ADDRESSES - removes and creates the file pointed to
#				   by this global
#	Retruns
#		None
#
function setup_main_ports
{
	# ensure that the apache webserver binds to the appropriately
	# addressed ports
	if [ -f ${LISTEN_ADDRESSES} ] ; then
		${RM} ${LISTEN_ADDRESSES}
	fi
	${CAT} <<- COMPAT_EOF > ${LISTEN_ADDRESSES}
	#
	# Do not edit by hand.
	# This file is created by the svc:/system/install/server method script
	# and is Included in the AI webserver configuration file.
	#
	COMPAT_EOF

	# get the full ip address from valid_networks
	for ip in $(valid_networks true) ;
	do
		print "Listen\t${ip}:${SMF_PORT}" >> ${LISTEN_ADDRESSES}
	done
}

case "$1" in
'start')
	# Code to execute on start

	# ensure that the default port is set
	if [ "X${SMF_PORT}" == "X" ]; then
		echo "The default port is not set for the service."
		exit ${SMF_EXIT_ERR_CONFIG}
	fi

	# First run aimdns daemon to register mDNS records for every
	# service that is listed as enabled. 
	if [ -f ${AIMDNSD_PID} ] ; then
		# only if aimdns daemon is not running do we start another
		if [[ ! "$($PS -p $($CAT $AIMDNSD_PID) -o args=)" == \
		     ~(E)"$AIMDNSD\$" ]]; then
			$AIMDNSD &
		fi
	else
		# no PID file found start aimdns daemon
		$AIMDNSD &
	fi

	# Start up the apache web server using our http config file
	if [ -f ${AI_HTTPD_CONF} ] ; then
		setup_main_ports
		setup_compatibility_file
		${APACHE2} -f ${AI_HTTPD_CONF} -k start
		if [ $? -ne 0 ] ; then
			${ECHO} "Unable to start apache process"
			exit $SMF_EXIT_ERR_CONFIG
		fi	
	else
		${ECHO} "Unable to start apache process due to missing" \
				"config file ${AI_HTTPD_CONF}"
		exit $SMF_EXIT_ERR_CONFIG
	fi
	;;

'stop')
	# Code to execute on stop

	# stop aimdns daemon
	if [ -f ${AIMDNSD_PID} ] ; then
		${KILL} $($CAT $AIMDNSD_PID)
	fi

	# stop apache server
	if [ -f ${AI_HTTPD_CONF} ] ; then
		${APACHE2} -f ${AI_HTTPD_CONF} -k stop
		if [ $? -ne 0 ] ; then
			${ECHO} "Unable to stop apache process"
			exit $SMF_EXIT_ERR_CONFIG
		fi
		# wait for the apache servers to exit or the stop timeout is reached
		while [[ $($PGREP -f "${HTTPD} -f ${AI_HTTPD_CONF}") ]]; do
			sleep 1
		done
	else
		${ECHO} "Unable to stop apache process due to missing" \
				"config file ${AI_HTTPD_CONF}"
		exit $SMF_EXIT_ERR_CONFIG
	fi
	;;

refresh)
	# ensure that the default port  is set
	if [ "X${SMF_PORT}" == "X" ]; then
		echo "The default port is not set for the service."
		exit ${SMF_EXIT_ERR_CONFIG}
	fi

	# if the aimdns daemon is running, refresh it, otherwise start it up.
	if [ -f ${AIMDNSD_PID} ] ; then
		${KILL} -1 $($CAT $AIMDNSD_PID)
	else
		$AIMDNSD &
	fi

	setup_main_ports
	setup_compatibility_file
	${APACHE2} -f ${AI_HTTPD_CONF} -k restart
	;;
	
*)
	${ECHO} "Usage: $0 { start | stop | refresh }"
	exit 1 
	;;


esac
exit 0
